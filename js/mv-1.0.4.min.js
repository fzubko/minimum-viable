export function mvStart(t){let r=createScope(null,{},"$rootScope"),a=()=>{let t=document.baseURI.replace(document.location.origin,""),o=document.getElementsByTagName("html")[0];o.classList.add("loading"),interpolate(o,r,t).then(()=>o.classList.remove("loading")),removeEventListener("load",a)};addEventListener("load",a),t&&t(r)}export const Logger={css:{caller:"color: #888; margin-left: 0.5rem;",create:t=>"background: #073; color: #fffd; padding: 0 0.3rem; border-radius: 0.3rem;"+(t?"margin-left: "+1.5*t+"rem;":""),access:t=>"background: #048; color: #fffd; padding: 0 0.3rem; border-radius: 0.3rem;"+(t?"margin-left: "+1.5*t+"rem;":""),invoke:t=>"background: #088; color: #fffd; padding: 0 0.3rem; border-radius: 0.3rem;"+(t?"margin-left: "+1.5*t+"rem;":""),update:t=>"background: #770; color: #fffd; padding: 0 0.3rem; border-radius: 0.3rem;"+(t?"margin-left: "+1.5*t+"rem;":""),remove:t=>"background: #850; color: #fffd; padding: 0 0.3rem; border-radius: 0.3rem;"+(t?"margin-left: "+1.5*t+"rem;":""),broken:t=>"background: #A00; color: #fffd; padding: 0 0.3rem; border-radius: 0.3rem;"+(t?"margin-left: "+1.5*t+"rem;":"")},icon:{watching:String.fromCodePoint(128064),sleeping:String.fromCodePoint(128164),skipping:String.fromCodePoint(8634)},noCallbacks:!1,innumerable:!1,scopeCreate:!1,scopeAccess:!1,scopeInvoke:!1,scopeUpdate:!1,scopeRemove:!1,scopeBroken:!0,set scope(value){Logger.scopeCreate=value,Logger.scopeAccess=value,Logger.scopeInvoke=value,Logger.scopeUpdate=value,Logger.scopeRemove=value,Logger.scopeBroken=value},textCreate:!1,textUpdate:!1,textRemove:!1,textBroken:!0,set text(value){Logger.textCreate=value,Logger.textUpdate=value,Logger.textRemove=value,Logger.textBroken=value},templateCreate:!1,templateInvoke:!1,templateUpdate:!1,templateBroken:!0,set template(value){Logger.templateCreate=value,Logger.templateInvoke=value,Logger.templateUpdate=value,Logger.templateBroken=value},pageCreate:!1,pageUpdate:!1,pageBroken:!0,set page(value){Logger.pageCreate=value,Logger.pageUpdate=value,Logger.pageBroken=value},eventCreate:!1,eventInvoke:!1,set event(value){Logger.eventCreate=value,Logger.eventInvoke=value},eachCreate:!1,eachUpdate:!1,eachRemove:!1,eachBroken:!0,set each(value){Logger.eachCreate=value,Logger.eachUpdate=value,Logger.eachRemove=value,Logger.eachBroken=value},ifCreate:!1,ifUpdate:!1,ifRemove:!1,ifBroken:!0,set if(value){Logger.ifCreate=value,Logger.ifUpdate=value,Logger.ifRemove=value,Logger.ifBroken=value},set all(value){Logger.noCallbacks=value,Logger.innumerable=value,Logger.scope=value,Logger.text=value,Logger.template=value,Logger.page=value,Logger.event=value,Logger.each=value,Logger.if=value,value&&Logger.legend()},legend(){console.debug("Logger Legend%ccreate%caccess%cinvoke%cupdate%cremove%cbroken",Logger.css.create(.5),Logger.css.access(.5),Logger.css.invoke(.5),Logger.css.update(.5),Logger.css.remove(.5),Logger.css.broken(.5)),console.debug(Logger.icon.watching,"watching, callback is registered for changes"),console.debug(Logger.icon.sleeping,"sleeping, callback waited until end of stack to execute"),console.debug(Logger.icon.skipping,"skipping, skipped callback, this one was already queued at the end of the stack")},redact(t){let r=t;return["function","object"].forEach(a=>r=typeof t===a&&null!=t?"|"+a+"|":r),r},get caller(){try{return/[a-zA-Z0-9_-]+\.\w+:\d+/.exec(Error().stack.split("\n")[3])[0]}catch(t){return""}}};export function evaluate(t,r){Function("$scope",`'use strict'; ${r};`)(t,r)}export function evaluateAsBoolean(t,r){return Function("$scope",`'use strict'; return !!(${r});`)(t,r)}export function evaluateTemplateLiteral(t,r){return Function("$scope",`'use strict'; return \`${r}\`;`)(t,r)}export async function interpolate(t,r,a="/"){mvEach(t,r),mvHref(t),mvEvent(t,r),mvText(t,r),mvBind(t,r),mvIf(t,r),await mvTemplate(t,r,a),mvPage(t,r,a)}export function createScope(t,r,a,o){let n,c=new Promise((t,o)=>{n=async o=>{c.finally(()=>{Logger.scopeRemove&&console.debug("%c"+a,Logger.css.remove(r.$depth));let t=[];for(let o of r.$children)t.push(o.$unload());Promise.all(t).then(()=>{Logger.scopeRemove&&console.debug("%c"+a,Logger.css.remove(r.$depth),"revoke"),s()})}),t(o),await c}});Object.defineProperties(r,{$label:{value:a},$parent:{value:t},$children:{value:new Set},$depth:{value:(()=>{let r=(t,a)=>t.$parent?r(t.$parent,a+1):a;return t?r(t,1):0})()},$routers:{value:[]},addRouter:{value(){let t,a=r=>(t.test=r,{goto:o,load:n}),o=r=>(t.newPathname=r,c.routes.push(t),c),n=(r,a)=>(t.templateSource=r,t.templateFunction=a,c.routes.push(t),c),c={when:t=>c.whenMatch(`^${t}$`),otherwise:t=>c.whenMatch(".").goto(t),whenMatch:r=>(t={pattern:r,test:!0},{assert:a,goto:o,load:n}),routes:[]};return r.$routers.push(c),c}},whenUnload:{value:c},$unload:{value:n},$dependencyChangeFunction:{value:null,writable:!0},$callbackMap:{value:{load:new Map,change:new Map,changeOnce:new Map,changeOnceDOM:new Map,shift:new Set,pop:new Set,unshift:new Set,push:new Set,sort:new Set,reverse:new Set,splice:new Set,copyWithin:new Set,fill:new Set}},on:{value(t,a,o){["load","change","changeOnce","changeOnceDOM"].includes(t)?(r.$callbackMap[t].get(a) instanceof Set||r.$callbackMap[t].set(a,new Set),r.$callbackMap[t].get(a).add(o)):(r.$callbackMap[t].add(a),"load"===t&&console.warn(a))}},trigger:{value:function(t,o){let n=0,c=0,l,g,s;"change"===t?(l=[t,o],Array.from(r.$callbackMap.changeOnceDOM.get(o)||[]).forEach((t,o)=>{c++,addToEndOfStack(t,t=>Logger.scopeInvoke&&console.debug("%c"+a,Logger.css.invoke(r.$depth),...l,"callback",n++,t))}),r.$callbackMap.changeOnceDOM.delete(o),g=new Set([...r.$callbackMap.change.get(o)||[],...r.$callbackMap.changeOnce.get(o)||[]]),s=[r[o]],r.$callbackMap.changeOnce.delete(o)):"load"===t?(l=[t,o],g=new Set([...r.$callbackMap.load.get(o)||[]])):(l=[t],g=new Set([...r.$callbackMap[t]]),s=Array.from(arguments).slice(1)),Logger.scopeInvoke&&(Logger.noCallbacks||g.size+c>0)&&console.debug("%c"+a,Logger.css.invoke(r.$depth),...l,"callbacks",g.size+c),g.forEach(t=>{Logger.scopeInvoke&&console.debug("%c"+a,Logger.css.invoke(r.$depth),...l,"callback",n++),t.apply(r,s)})}}}),Logger.scopeCreate&&console.debug("%c"+a,Logger.css.create(r.$depth),r.toJSON?r.toJSON():"");let l={get:scopeGet,set:scopeSet,deleteProperty:scopeDelete,apply:(t,r,a)=>(console.warn("APPLY!!",t,r,a),Reflect.apply(t,r,a))},{proxy:g,revoke:s}=Proxy.revocable(r,l);return l.$scope=g,l.propertyName=o,t&&(t.$children.add(g),r.whenUnload.then(()=>t.$children.delete(g))),g}let endOfStackChanges=new Set,changesQueued=!1;function addToEndOfStack(t,r){if(endOfStackChanges.has(t)){endOfStackChanges.add(()=>r(Logger.icon.skipping));return}endOfStackChanges.add(t),changesQueued||(changesQueued=!0,Promise.resolve().then(()=>{let t=new Set(endOfStackChanges);endOfStackChanges.clear(),changesQueued=!1,r(Logger.icon.sleeping),t.forEach(t=>t())}))}export function scopeGet(t,r,a){let o=null!==t.$dependencyChangeFunction?Logger.icon.watching:"";if(["$label","$depth"].includes(r))return t[r];if((Logger.innumerable||t.propertyIsEnumerable(r))&&Logger.scopeAccess&&console.debug("%c"+t.$label+"%c"+Logger.caller,Logger.css.access(t.$depth),Logger.css.caller,r,"=",Logger.redact(t[r]),o),null!==t.$dependencyChangeFunction&&(t.on("changeOnceDOM",r,t.$dependencyChangeFunction),"object"==typeof t[r]&&null!=t[r]&&(t[r].$dependencyChangeFunction=t.$dependencyChangeFunction,t.on("changeOnce","$dependencyChangeFunction",()=>t[r].$dependencyChangeFunction=null))),"object"==typeof t&&"toString"===r&&"function"==typeof t[r]&&"[object Object]"===t[r]())return()=>JSON.stringify(this.$scope);if(t instanceof Date&&"string"==typeof r&&"function"==typeof t[r]){if(r.startsWith("set"))return(...a)=>{let o=t.toString(),n=Date.prototype[r].apply(t,a);return o!==n.toString()&&t.$parent.trigger("change",this.propertyName),n};if(/^get|^to|^valueOf$/.exec(r))return t[r].bind(t)}if(t instanceof Array){if(["unshift","push"].includes(r))return(...a)=>{let o=Array.prototype[r].apply(t,a);return t.trigger(r,...a),t.trigger("change","length"),o};if(["shift","pop"].includes(r))return(...a)=>{let o=Array.prototype[r].apply(t,a);return t.trigger(r,...a),t.trigger("change","length"),o};if(["reverse"].includes(r))return(...a)=>{let o=Array.prototype[r].apply(t,a);return t.trigger(r,...a),t.trigger("change","toJSON"),o};if(["sort"].includes(r))return r=>{let a=sortIndices(t,r);return t.trigger("sort",a),t.trigger("change","toJSON"),t};if(["splice"].includes(r))return(a,o,...n)=>{let c=Array.prototype[r].apply(t,[a,o,...n]);return t.trigger(r,a,o,...n),o!=n.length&&t.trigger("change","length"),o+n.length>0&&t.trigger("change","toJSON"),c};if(["copyWithin"].includes(r))return(a,o,n=t.length)=>{let c=Array.prototype[r].apply(t,[a,o,n]);return t.trigger(r,a,o,n),a<t.length&&n-o>0&&t.trigger("change","toJSON"),c};if(["fill"].includes(r))return(a,o,n=t.length)=>{let c=Array.prototype[r].apply(t,[a,o,n]);return t.trigger(r,a,o,n),o<t.length&&n-o>0&&t.trigger("change","toJSON"),c}}return Reflect.get(t,r,a)}function sortIndices(t,r=(t,r)=>String(t).localeCompare(r)){let a=t.map((t,r)=>r);return!function t(a,o,n,c){if(n<c){let l=Math.floor((n+c)/2);t(a,o,n,l),t(a,o,l+1,c),function t(a,o,n,c,l){let g=n,s=c+1;for(;g<=c&&s<=l;)if(0>=r(a[g],a[s]))g++;else{let p=s;for(;p>g;)[a[p],a[p-1]]=[a[p-1],a[p]],[o[p],o[p-1]]=[o[p-1],o[p]],p--;g++,c++,s++}}(a,o,n,l,c)}}(t,a,0,t.length-1),a}export function scopeSet(t,r,a,o){if((Logger.innumerable||!t.hasOwnProperty(r)||t.propertyIsEnumerable(r))&&Logger.scopeUpdate&&console.debug("%c"+t.$label,Logger.css.update(t.$depth),r,"=",Logger.redact(t[r]),">>",Logger.redact(a)),t[r]===a)return!0;if("$dependencyChangeFunction"===r&&null!=a)return Reflect.set(t,r,a,o);if(t.$dependencyChangeFunction&&"$dependencyChangeFunction"!==r)return Logger.scopeBroken&&console.error("%c"+t.$label,Logger.css.broken(t.$depth),`attempted update of '${r}', mv syntax should be idempotent`),!1;let n="object"==typeof t[r]&&null!=t[r]?"object":"literal",c="object"==typeof a&&null!=a?"object":"literal",l="object"===c?createScope(this.$scope,a,t.$label+"."+r,r):a;if("object"===n)return t[r].$unload().then(()=>{Reflect.set(t,r,l,o),t.trigger("change",r),"object"===c&&t.trigger("load",r)}),!0;let g=t instanceof Array&&r>=t.length;return Reflect.set(t,r,l,o),t.trigger("change",r),"object"===c&&t.trigger("load",r),g&&(t.trigger("change","length"),t.trigger("change","toJSON")),!0}export function scopeDelete(t,r){if(Logger.scopeRemove&&console.debug("%c"+t.$label,Logger.css.remove(t.$depth),r,"=",Logger.redact(t[r])),"object"==typeof t[r]&&null!=t[r])return t[r].$unload().then(()=>{Reflect.deleteProperty(t,r),t.trigger("change",r)}),!0;let a=Reflect.deleteProperty(t,r);return t.trigger("change",r),a}export function mvBind(t,r){for(let a of t.querySelectorAll(":scope form[mv-bind]")){let o=a.getAttribute("mv-bind");for(let n of(r[o]??={},a.querySelectorAll(":scope :not([type=button], [type=image], [type=reset], [type=submit])[name]"))){let c=n.getAttribute("name");r[o][c]??=n.value,n.setAttribute("mv-bind",o+"."+c)}}for(let l of t.querySelectorAll(":scope :not(form)[mv-bind]")){let g=l.getAttribute("mv-bind").split(".").slice(0,-1).reduce((t,r)=>t[r],r),s=l.getAttribute("mv-bind").split(".").pop(),p=(l.hasAttribute("multiple")?"multi-":"")+("INPUT"===l.tagName?l.type||"text":l.tagName),i,d;switch(p.toLowerCase()){case"date":case"week":case"month":case"time":i=()=>{if(null==(l.value||null)){g[s]=null;return}g[s]=l.valueAsDate},d=t=>{t?l.valueAsDate=new Date(t.getTime()):l.value=null};break;case"datetime-local":i=()=>{if(null==(l.value||null)){g[s]=null;return}let t=l.value.split(/[-T:.]/);t[1]=t[1]-1,t.length>6&&(t[6]=t[6].padEnd(3,"0")),g[s]=getNewUtcDate(...t)},d=()=>{if(g[s]){let t=new Date(g[s].getTime());l.value=t.getUTCFullYear()+"-"+(t.getUTCMonth()+1).toString().padStart(2,"0")+"-"+t.getUTCDate().toString().padStart(2,"0")+"T"+t.getUTCHours().toString().padStart(2,"0")+":"+t.getUTCMinutes().toString().padStart(2,"0")+":"+t.getUTCSeconds().toString().padStart(2,"0")+"."+t.getUTCMilliseconds().toString().padStart(3,"0")}else l.value=null};break;case"radio":g[s]??=l.value,i=()=>{g[s]=l.value},d=()=>{l.checked=l.value==g[s]};break;case"checkbox":g[s]??=l.checked,i=()=>{g[s]=l.checked},d=()=>{l.checked=!!g[s]};break;case"file":case"multi-file":g[s]=l.files,i=()=>{g[s]=l.files};break;case"multi-select":g[s]??=[],i=()=>{let t=Array.from(l.options).every(t=>numberPattern.exec(t.value)),r=new Set;for(let a of l.selectedOptions)r.add(t?Number(a.value):a.value);for(let o=g[s].length;o--;){let n=g[s][o];r.has(n)?r.delete(n):g[s].splice(o,1)}r.forEach(t=>g[s].push(t));let c=Array.from(l.selectedOptions).map(t=>t.value);g[s].sort((t,r)=>{let a=c.indexOf(t.toString()),o=c.indexOf(r.toString());return a.toString().localeCompare(o,void 0,{numeric:!0})})},d=()=>{let t=Array.from(l.options).every(t=>numberPattern.exec(t.value)),r=new Set(g[s]);for(let a of l.options)a.selected=r.has(t?Number(a.value):a.value)};break;case"number":case"range":g[s]??=l.valueAsNumber,i=()=>{g[s]=l.valueAsNumber},d=()=>{l.value=g[s]};break;case"color":case"email":case"hidden":case"password":case"search":case"select":case"tel":case"text":case"textarea":case"url":g[s]??=l.value,i=()=>{g[s]=l.value},d=()=>{l.value=g[s]};break;default:console.error("Unsupported mv-bind",l)}l.addEventListener("input",i),r.whenUnload.then(()=>l.removeEventListener("input",i)),d&&(d(g[s]),g.on("change",s,d)),"multi-select"===p.toLowerCase()&&(["unshift","push","shift","pop","splice","copyWithin","fill"].forEach(t=>{g[s].on(t,d)}),g[s].on("change","length",d))}}let numberPattern=RegExp(/^(-?(0|[1-9]\d*)(\.\d+)?|\.\d+)$/);export function mvEach(t,r){let a=function*(){for(;;){let r=t.querySelector(":scope [mv-each]");if(!r)break;yield r}}();for(let o of a){let n=o.getAttribute("mv-each"),c=`mv-each="${n}"`,l=document.createComment(c);o.before(l),o.removeAttribute("mv-each");let g=n.split(" in ")[0],s=n.split(" in ")[1],p=s.split(".").slice(0,-1).reduce((t,r)=>t[r],r),i=s.split(".").pop(),d=r.$label+`.${s}[${g}]`,u=[],h=[],f=0;if(2!==n.split(" in ").length)return o.classList.add("broken"),Logger.eachBroken&&console.error("%c"+c,Logger.css.broken(r.$depth),"improper mv-each statement");if(!p[i])return o.classList.add("broken"),Logger.eachBroken&&console.error("%c"+c,Logger.css.broken(r.$depth),`no list named '${s}'`);function m(t,a){let n=0==t?l:u[t-1];Logger.eachCreate&&console.debug(`%c${c}[${t}]%c${Logger.caller}`,Logger.css.create(r.$depth),Logger.css.caller),u.splice(t,0,o.cloneNode(!0)),h.splice(t,0,createScope(r,{[g]:a},d)),n.after(u[t]),interpolate(u[t],h[t]);let s=r=>h[t][g]=r;p[i].on("change",""+t,s),h[t].whenUnload.then(()=>{try{p[i].$callbackMap.change.get(""+t).delete(s)}catch(r){if(!(r instanceof TypeError))throw r}}),f++}function L(t){if(0===f)return!1;let a=u.splice(t,1)[0],o=h.splice(t,1)[0];f--;try{Logger.eachRemove&&console.debug("%c"+c+"%c"+Logger.caller,Logger.css.remove(r.$depth),Logger.css.caller,t)}catch(n){if(!(n instanceof TypeError))throw n}try{a.remove(),o.$unload()}catch(l){if(!(l instanceof TypeError))throw l}return!0}o.remove(),Logger.eachCreate&&console.debug("%c"+c,Logger.css.create(r.$depth));let b={unshift(...t){Logger.eachUpdate&&console.debug("%c"+c,Logger.css.update(r.$depth),"unshift x",t.length),t.toReversed().forEach(t=>m(0,t))},push(...t){Logger.eachUpdate&&console.debug("%c"+c,Logger.css.update(r.$depth),"push x",t.length),t.forEach(t=>m(f,t))},shift(){Logger.eachUpdate&&console.debug("%c"+c,Logger.css.update(r.$depth),"shift"),L(0)},pop(){Logger.eachUpdate&&console.debug("%c"+c,Logger.css.update(r.$depth),"pop"),L(f-1)},reverse(){Logger.eachUpdate&&console.debug("%c"+c,Logger.css.update(r.$depth),"reverse"),u.forEach(t=>l.after(t)),u.reverse(),h.reverse()},sort(t){Logger.eachUpdate&&console.debug("%c"+c,Logger.css.update(r.$depth),"sort"),reorder(u,t),reorder(h,t),u.forEach((t,r)=>{(0===r?l:u[r-1]).after(t)})},splice(t,a,...o){Logger.eachUpdate&&console.debug("%c"+c,Logger.css.update(r.$depth),"splice",t,a,o.length);for(let n=0;n<a&&t<f;n++)L(t);o.forEach((r,a)=>{m(t+a,r)})},copyWithin(t,a,o=f){Logger.eachUpdate&&console.debug("%c"+c,Logger.css.update(r.$depth),"copyWithin",t,a,o);for(let n=0;t+n<f&&n<o-a;n++)L(t+n),m(t+n,p[i][t+n])},fill(t,a,o=f){Logger.eachUpdate&&console.debug("%c"+c,Logger.css.update(r.$depth),"fill",Logger.redact(t),a,o);for(let n=a;n<f&&n<o;n++)L(n),m(n,t)}},v=(t=p[i][f])=>{for(Logger.eachUpdate&&console.debug("%c"+c,Logger.css.update(r.$depth),"length",f,">>",t);f<t;)m(f,p[i][f]);for(;f>t;)L(f-1)},k=()=>{for(;f>0;)L(f-1);for(let t=0;t<p[i].length;t++)m(t,p[i][t]);for(let[r,a]of(p[i].on("change","length",v),Object.entries(b)))p[i].on(r,a)},y=t=>{if(!t)for(;f>0;)console.warn("length =",f,"removing"),L(f-1),console.warn("  good")};for(let[C,$]of(r.whenUnload.then(()=>{p?.[i].$callbackMap.change.get("length").delete(v),p.$callbackMap.load.get(i).delete(k),p.$callbackMap.load.get(i).delete(y)}),Object.entries(b)))r.whenUnload.then(()=>p?.[i].$callbackMap[C].delete($));p.on("change",i,y),p.on("load",i,k),p[i]&&k()}}function reorder(t,r){return t.map((a,o)=>t[r[o]]).forEach((r,a)=>t[a]=r),t}export function mvEvent(t,r){let a=new Map([["mv-click","click"],["mv-submit","submit"]]);for(let[o,n]of a){let c=r.$label+`[${o}]`;for(let l of t.querySelectorAll(`:scope [${o}]`)){Logger.eventCreate&&console.debug("%c"+c,Logger.css.create(r.$depth));let g=t=>{try{Logger.eventInvoke&&console.debug("%c"+c,Logger.css.invoke(r.$depth)),t.preventDefault(),evaluate.call(l,r,l.getAttribute(o))}catch(a){console.warn("%c"+o,"color: darkorange;","\n",a)}};l.addEventListener(n,g),r.whenUnload.then(()=>removeEventListener(n,g))}}}export function mvHref(t){for(let r of t.querySelectorAll(":scope [mv-href]"))r.addEventListener("click",t=>{t.stopPropagation(),t.preventDefault(),history.pushState("","",r.getAttribute("href")),document.location.hash&&document.querySelector(document.location.hash)&&document.querySelector(document.location.hash).scrollIntoView(),dispatchEvent(new Event("popstate"))})}export function mvIf(t,r){for(let a of t.querySelectorAll(":scope [mv-if]")){let o=a.getAttribute("mv-if"),n=`mv-if="${o}"`,c=document.createComment(n);Logger.ifCreate&&console.debug("%c"+n,Logger.css.create(r.$depth));let l=()=>{Logger.ifUpdate&&console.debug("%c"+n,Logger.css.update(r.$depth),s);let t=g();s!=t&&((s=t)?c.replaceWith(a):a.replaceWith(c)),Logger.ifUpdate&&console.debug("%c"+n,Logger.css.update(r.$depth),s)},g=()=>{try{return r.$dependencyChangeFunction=l,evaluateAsBoolean(r,o)}catch(t){Logger.ifBroken&&console.error("%c"+n,Logger.css.broken(r.$depth),"\n",t)}finally{r.$dependencyChangeFunction=null}},s=g();s||a.replaceWith(c),r.whenUnload.then(()=>{Logger.ifRemove&&console.debug("%c"+n,Logger.css.remove(r.$depth));let t=r=>{r.$parent&&t(r.$parent),r.$callbackMap.changeOnceDOM.forEach(t=>t.delete(l))};t(r)})}}export function mvPage(t,r,a){t.querySelectorAll(":scope [mv-page]").forEach((t,o)=>{let n=t.outerHTML,c=r.$routers[o];if(!r.$routers[o])return t.classList.add("broken"),Logger.pageBroken&&console.error("%c"+n,Logger.css.broken(r.$depth),"no router");Logger.pageCreate&&console.debug("%c"+n,Logger.css.create(r.$depth));let l,g,s=o=>{let s=document.baseURI.replace(document.location.origin,"").slice(0,-1),p=c.routes.find(t=>!!RegExp(t.pattern).test(document.location.pathname.replace(s,""))&&!!t.test&&("function"==typeof t.test?(async()=>await t.test())():t.test));if(l==p||(l=p,Logger.pageUpdate&&console.debug("%c"+n,Logger.css.update(r.$depth),document.location.pathname,p),g&&(g.$unload(),g=null),t.innerHTML="",!p))return;if(p.newPathname){p.newPathname!=location.pathname&&(history.pushState("","",s+p.newPathname),dispatchEvent(new Event("popstate")));return}let i=document.createElement("div");i.setAttribute("mv-template",p.templateFunction??""),i.setAttribute("src",p.templateSource),t.appendChild(i),Logger.pageCreate&&console.debug("%c"+n,Logger.css.update(r.$depth),p.templateSource,p.templateFunction??""),mvTemplate(t,r,a).then(t=>{g=t[0],document.location.hash&&document.querySelector(document.location.hash)&&document.querySelector(document.location.hash).scrollIntoView()})};addEventListener("popstate",s),s()})}let templatePromiseCache={},templateScriptCache={},templateCssCache={},templateCache={},templateModuleCache={};export async function mvTemplate(t,r,a){let o=Array.from(t.querySelectorAll(":scope [mv-template]"));async function n(t){let o=t.getAttribute("src"),n=t.getAttribute("mv-template"),c=`mv-tempate=${n} ${o}`,l=createScope(r,{},o);if(!o)return t.classList.add("broken"),Logger.templateBroken&&console.error("%c"+c,Logger.css.broken(r.$depth),"\n",e);Logger.templateCreate&&console.debug("%c"+c,Logger.css.create(r.$depth)),t.classList.add("loading");let g=document.createComment(c);t.before(g),t.removeAttribute("mv-template");let s=(o.startsWith("/")?"":a)+o.split("/").slice(0,-1).map(t=>t+"/").join("");templatePromiseCache[a+o]||(templatePromiseCache[o]=fetch(o),templateCache[o]=document.createElement("template"),templateCache[o].innerHTML=await templatePromiseCache[o].then(t=>t.ok?t.text():""));let p=Array.from(templateCache[o].content.querySelectorAll("script")),i=Array.from(templateCache[o].content.querySelectorAll("link[rel=stylesheet]"));await Promise.all([...p.map(t=>loadScript(r,t,c,o,s)),...i.map(t=>loadCss(r,t,c,s))]);let d=templateCache[o].content.cloneNode(!0);if(t.innerHTML="",t.append(d),Logger.templateUpdate&&console.debug("%c"+c,Logger.css.update(r.$depth),"loaded"),n){let u=(templateModuleCache[o]||[]).find(t=>t[n]);if(!u)return t.classList.add("broken"),Logger.templateBroken&&console.error("%c"+c,Logger.css.broken(r.$depth),`template function '${n}' not found or not exported`);Logger.templateInvoke&&console.debug("%c"+c,Logger.css.invoke(r.$depth),n),setTimeout(()=>u[n].call(d,l),1e3)}return await interpolate(t,l,s),t.classList.remove("loading"),l}return t.matches("[mv-template]")&&o.unshift(t),await Promise.all(o.map(n)).then(t=>t)}async function loadScript(t,r,a,o,n){let c=r.getAttribute("src");templateScriptCache[c=c.startsWith("/")?c:n+c]||(templateModuleCache[o]=templateModuleCache[o]??[],templateScriptCache[c]=import(c),await templateScriptCache[c],templateScriptCache[c].then(r=>{templateModuleCache[o].push(r),Logger.templateUpdate&&console.debug("%c"+a,Logger.css.update(t.$depth),c)})),r.remove()}async function loadCss(t,r,a,o){let n=r.getAttribute("href");templateCssCache[n=n.startsWith("/")?n:o+n]||(templateCssCache[n]=import(n,{with:{type:"css"}}),await templateCssCache[n],templateCssCache[n].then(r=>{document.adoptedStyleSheets.push(r.default),Logger.templateUpdate&&console.debug("%c"+a,Logger.css.update(t.$depth),n)})),r.remove()}export function mvText(t,r){let a=getTextNodes(t),o=getNodeAttributesMap(t);a.forEach(t=>{let a=t.nodeValue,o=a.replace(/{{/g,"${").replace(/}}/g,"}"),n=()=>{Logger.textUpdate&&console.debug("%c"+a.trim(),Logger.css.update(r.$depth),t.nodeValue);let o=c();t.nodeValue!=o&&(t.nodeValue=o),Logger.textUpdate&&console.debug("%c"+a.trim(),Logger.css.update(r.$depth),o)},c=()=>{try{return r.$dependencyChangeFunction=n,evaluateTemplateLiteral(r,o)}catch(c){return Logger.textBroken&&console.error("%c"+a.trim(),Logger.css.broken(r.$depth),"\n",c),t.nodeValue}finally{r.$dependencyChangeFunction=null}};Logger.textCreate&&console.debug("%c"+a.trim(),Logger.css.create(r.$depth)),t.nodeValue=c(),r.whenUnload.then(()=>{Logger.textRemove&&console.debug("%c"+a.trim(),Logger.css.remove(r.$depth));let t=r=>{r.$parent&&t(r.$parent),r.$callbackMap.changeOnceDOM.forEach(t=>t.delete(n))};t(r)})}),o.forEach((t,a)=>{t.forEach(t=>{let o=t.value,n=o.replace(/{{/g,"${").replace(/}}/g,"}"),c=()=>{Logger.textUpdate&&console.debug("%c"+o.trim(),Logger.css.update(r.$depth),t.value);let a=l();t.value!=a&&(t.value=a),Logger.textUpdate&&console.debug("%c"+o.trim(),Logger.css.update(r.$depth),a)},l=()=>{try{return r.$dependencyChangeFunction=c,evaluateTemplateLiteral.call(a,r,n)}catch(l){return console.warn("%c"+o,"color: darkorange;","\n",l),t.value}finally{r.$dependencyChangeFunction=null}};t.value=l(),r.whenUnload.then(()=>{let t=r=>{r.$parent&&t(r.$parent),r.$callbackMap.changeOnce.forEach(t=>t.delete(c))};t(r)})})})}function getTextNodes(t){let r=/{{.*}}/,a=document.createTreeWalker(t,NodeFilter.SHOW_TEXT,t=>r.exec(t.nodeValue)?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP),o=[],n;for(;n=a.nextNode();)o.push(n);return o}function getNodeAttributesMap(t){let r=document.createTreeWalker(t,NodeFilter.SHOW_ELEMENT,t=>t.attributes.length?NodeFilter.FILTER_ACCEPT:NodeFilter.FILTER_SKIP),a=new Map,o=r.currentNode;do{let n=Array.from(o.attributes).filter(t=>/{{.*}}/.exec(t.value));n.length&&a.set(o,n)}while(o=r.nextNode());return a}